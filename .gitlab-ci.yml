stages:
  - build
  - test
  - deploy
  - push-to-company-gitlab

variables:
  REGISTRY: registry.gitlab.com/pjb_01_g1/kindergarten-suggestion-system
  FRONTEND_IMAGE: $REGISTRY/kss_front
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: "1" # ✅ Sử dụng BuildKit để build Docker mà không cần docker:dind
  BUILDKIT_PROGRESS: "plain"

default:
  image: docker:20.10.16

before_script:
  - apk add --no-cache docker
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

# 🛠 Build Docker Image - Chỉ build khi có thay đổi trong front/
build-job:
  stage: build
  script:
    - export IMAGE_TAG=$FRONTEND_IMAGE:$CI_COMMIT_SHORT_SHA

    # Kiểm tra xem có thay đổi trong thư mục front/ không
    - |
      if git diff --quiet HEAD~1 -- front/; then
        echo "No changes in front/, skipping build."
        exit 0
      fi

    # Build và push Docker image với commit hash tag (dùng BuildKit thay vì docker:dind)
    - docker build --progress=plain --pull --rm -t $IMAGE_TAG -f ./front/Dockerfile ./front
    - docker push $IMAGE_TAG
  artifacts:
    paths:
      - front/.next/

# 🚀 Deploy lên EC2
deploy-ec2:
  stage: deploy
  image: alpine
  dependencies:
    - build-job
  before_script:
    - apk add --no-cache openssh rsync
  script:
    - echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key

    # Cấp quyền cho ec2-user trên EC2
    - ssh -i private_key -o StrictHostKeyChecking=no ec2-user@$EC2_HOST "sudo mkdir -p /var/www/kindergarten-suggestion-system && sudo chown -R ec2-user:ec2-user /var/www/kindergarten-suggestion-system"

    # Xóa thư mục cũ để tránh lỗi đồng bộ
    - ssh -i private_key -o StrictHostKeyChecking=no ec2-user@$EC2_HOST "rm -rf /var/www/kindergarten-suggestion-system/*"

    # Đồng bộ code từ GitLab Runner lên EC2
    - rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" ./ ec2-user@$EC2_HOST:/var/www/kindergarten-suggestion-system/ --exclude node_modules --exclude .git

    # SSH vào EC2 để pull Docker image mới nhất và khởi động lại container
    - |
      ssh -i private_key -o StrictHostKeyChecking=no ec2-user@$EC2_HOST << 'EOF'
        export IMAGE_TAG=$FRONTEND_IMAGE:$CI_COMMIT_SHORT_SHA
        sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      
        # Kiểm tra xem image đã tồn tại trên máy chưa, nếu chưa thì pull về
        if ! sudo docker images | grep -q "$IMAGE_TAG"; then
          sudo docker pull $IMAGE_TAG
        fi
      
        # Dọn dẹp container, image, volume cũ để tránh hết dung lượng
        sudo docker container prune -f
        sudo docker image prune -af
        sudo docker volume prune -f

        # Khởi động lại container
        cd /var/www/kindergarten-suggestion-system
        sudo docker-compose down
        sudo docker-compose up -d
      EOF
  only:
    - main
  environment:
    name: production
    url: http://$EC2_HOST

# 🔄 Push lên GitLab nội bộ
push-to-company-gitlab:
  stage: push-to-company-gitlab
  image: alpine
  dependencies:
    - deploy-ec2
  before_script:
    - apk add --no-cache git rsync
  script:
    - git config --global user.name "hieungo"
    - git config --global user.email "hieunmhe182607@fpt.edu.vn"

    # Kiểm tra nếu nhánh feature-branch đã tồn tại thì xóa đi trước khi tạo lại
    - git branch -D feature-branch || true
    - git checkout -b feature-branch

    # Cấu hình GitLab nội bộ
    - git remote remove origin || true
    - git remote add origin https://oauth2:$COMPANY_GITLAB_TOKEN@git.fa.edu.vn/hn25_cpl_pjb_01/hn25_cpl_pjb_01_g1/kindergarten-suggestion.git

    # Push code lên GitLab nội bộ
    - git push -uf origin feature-branch
  only:
    - main
